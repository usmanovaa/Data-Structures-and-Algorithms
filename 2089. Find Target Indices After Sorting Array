# 2089. Find Target Indices After Sorting Array

# You are given a 0-indexed integer array nums and a target element target.
# A target index is an index i such that nums[i] == target.
# Return a list of the target indices of nums after sorting nums in non-decreasing order. 
# If there are no target indices, return an empty list. The returned list must be sorted in increasing order.

# Input: nums = [1,2,5,2,3], target = 2
# Output: [1,2]
# Explanation: After sorting, nums is [1,2,2,3,5].
# The indices where nums[i] == 2 are 1 and 2.

# INITIAL VERSION, based on Selection Sort, O(n*n+n)
# Runtime 46 ms Beats 20.36% Memory 13.6 MB Beats 17.33%

class Solution(object):
    def targetIndices(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """

        # selection sort 

        for i in range(len(nums)):
            min_index = i

            for j in range(i+1, len(nums)):
                if nums[j] < nums[min_index]:
                    min_index = j
            
            nums[i], nums[min_index] = nums[min_index], nums[i]

        idx = []
        i = 0
        while i < len(nums):
            if nums[i] == target:
                idx.append(i)
            i+=1

        return idx
        
# MORE ELEGANT VERSION

... return [i for i in range(len(nums)) if nums[i]== target]
