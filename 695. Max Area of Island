# 695. Max Area of Island (Medium)


# You are given an m x n binary matrix grid. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.
#The area of an island is the number of cells with a value 1 in the island.
#Return the maximum area of an island in grid. If there is no island, return 0.

# Array, Depth-First Search

# INITIAL VERSION, Time complexity O(n*m)
# Runtime 105 ms Beats 79.5% Memory 15.4 MB Beats 59.94%

def island(grid, i,j, visited, area):

    visited.add((i,j))

    if grid[i][j] == 1:
        area += 1

        if i-1 >= 0 and grid[i-1][j] == 1 and (i-1,j) not in visited:
            area, visited = island(grid, i-1, j, visited, area)
        if i+1 < len(grid) and grid[i+1][j] == 1 and (i+1,j) not in visited:
            area, visited = island(grid, i+1, j, visited, area)
        if j-1 >= 0 and grid[i][j-1] == 1 and (i,j-1) not in visited:
            area, visited = island(grid, i, j-1, visited, area)
        if j+1 < len(grid[0]) and grid[i][j+1] == 1 and (i,j+1) not in visited:
            area, visited = island(grid, i, j+1, visited, area)

    return area, visited



class Solution(object):

    def maxAreaOfIsland(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """

        max_area = 0 
        visited = set()

        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == 1 and (i,j) not in visited:
                    area = 0
                    area, visited = island(grid, i, j, visited, area)
                    max_area = max(area, max_area)
                    print(grid[i][j])

        return max_area
        
        
        
        
# A BIT MORE ELEGANT
# Runtime 105 ms Beats 79.5% Memory 15.7 MB Beats 55.18%


class Solution(object):

    def maxAreaOfIsland(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """

        max_area = 0 

        def island(i,j):
            if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[0]) or grid[i][j] != 1:
                return 0
            grid[i][j] = 0
            return 1 + island(i-1,j) + island(i+1,j) + island(i,j-1) + island(i,j+1)


        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == 1:
                    max_area = max(max_area, island(i, j))

        return max_area
