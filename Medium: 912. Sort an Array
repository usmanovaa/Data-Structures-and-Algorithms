# 912. Sort an Array

# Given an array of integers nums, sort the array in ascending order and return it.
# You must solve the problem without using any built-in functions in O(nlog(n)) time complexity and with the smallest space complexity possible.
# Input: nums = [5,2,3,1]
# Output: [1,2,3,5]

https://leetcode.com/problems/sort-an-array/description/



# INITIAL VERSION, O(nlogn)

class Solution(object):
    def sortArray(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """

        def mergeSort(array):
            

            if len(array) > 1:
   
            
                m = len(array) // 2

                arr1 = array[:m]
                arr2 = array[m:]


                arr1 = mergeSort(arr1)
                arr2 = mergeSort(arr2)

                i = j = k = 0

                while (i < len(arr1)) & (j < len(arr2)):
                    if arr1[i] < arr2[j]:
                        array[k] = arr1[i]
                        i+=1
                    elif arr2[j] <= arr1[i]:
                        array[k] = arr2[j]
                        j+=1
                    k+=1
                
                while i < len(arr1):
                    array[k] = arr1[i]
                    i+=1
                    k+=1

                while j < len(arr2):
                    array[k] = arr2[j]
                    j+=1
                    k+=1


            return array

        return mergeSort(nums)
